name: Publish to NPM
on:
  push:
    branches:
      - main

jobs:
  increment-versions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Update versions
        run: |
          changed_packages=$(git diff version HEAD --name-only --diff-filter=ACM | grep -E "(packages|plugins|utils)/" | xargs dirname | sort -u)
          if [ -z "$changed_packages" ]; then
            echo "No changes found in packages, skipping update"
            exit 0
          else
            updated_packages=""
            for pkg in $changed_packages
            do
              current_version=$(pnpm pkg get version --package-dir $pkg)
              new_version=$(node -pe "require('semver').inc('$current_version', 'patch')")
              echo "Bumping version for $pkg from $current_version to $new_version"
              pnpm pkg update --package-dir $pkg --version $new_version
              updated_packages="$updated_packages\n- $pkg: $new_version"
            done
            echo "Package updates:$updated_packages"
            echo "::set-output name=updated_packages::$updated_packages"
          fi
        id: update-versions

      - name: Build packages
        run: pnpm build

      - name: Publish packages
        if: steps.update-versions.outputs.updated_packages != '' && github.event_name == 'push'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: pnpm publish -r --access public

      - name: Push changes to version branch
        if: steps.update-versions.outputs.updated_packages != '' && github.event_name == 'push'
        run: |
          git checkout version
          git merge main
          git push origin version

      - name: Create pull request
        if: steps.update-versions.outputs.updated_packages != '' && github.event_name == 'push'
        uses: peter-evans/create-pull-request@v3.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "(chore): updated package versions"
          title: "(chore): Update package versions"
          body: |
            The following packages have been updated:
            ${{ steps.update-versions.outputs.updated_packages }}
          branch: main
          base: version
